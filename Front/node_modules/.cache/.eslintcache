[{"C:\\Users\\xavier\\challengeVick\\Front\\src\\index.js":"1","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Root\\Root.js":"2","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\BestPrice\\BestPrice.js":"3","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Trade\\Trade.js":"4","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Init\\Init.js":"5","C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\store.js":"6","C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\reducers\\tradeSlice.js":"7","C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\reducers\\bestpriceSlice.js":"8","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\index.js":"9","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\store.js":"10","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Root\\Root.js":"11","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\reducers\\tradeSlice.js":"12","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\reducers\\bestpriceSlice.js":"13","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\BestPrice\\BestPrice.js":"14","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Trade\\Trade.js":"15","C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Init\\Init.js":"16"},{"size":723,"mtime":1665891927756,"results":"17","hashOfConfig":"18"},{"size":616,"mtime":1665156834627,"results":"19","hashOfConfig":"18"},{"size":6400,"mtime":1666414002514,"results":"20","hashOfConfig":"18"},{"size":8024,"mtime":1665874547149,"results":"21","hashOfConfig":"18"},{"size":1116,"mtime":1665169176748,"results":"22","hashOfConfig":"18"},{"size":369,"mtime":1665958777803,"results":"23","hashOfConfig":"18"},{"size":937,"mtime":1665168969451,"results":"24","hashOfConfig":"18"},{"size":864,"mtime":1665958838185,"results":"25","hashOfConfig":"18"},{"size":723,"mtime":1666746589427,"results":"26","hashOfConfig":"27"},{"size":369,"mtime":1666746589423,"results":"28","hashOfConfig":"27"},{"size":616,"mtime":1666746589371,"results":"29","hashOfConfig":"27"},{"size":937,"mtime":1666746589418,"results":"30","hashOfConfig":"27"},{"size":864,"mtime":1666746589414,"results":"31","hashOfConfig":"27"},{"size":6400,"mtime":1666746589384,"results":"32","hashOfConfig":"27"},{"size":8024,"mtime":1666746589394,"results":"33","hashOfConfig":"27"},{"size":1116,"mtime":1666746589379,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"11hwv5",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2o6c13",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\xavier\\challengeVick\\Front\\src\\index.js",[],["71","72"],"C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Root\\Root.js",[],"C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\BestPrice\\BestPrice.js",["73","74","75"],"import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePrice , reset_price } from '../../redux/reducers/bestpriceSlice';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './BestPrice.css';\r\n\r\n// savePrice para poder usar el \"dispatch\" y enviar el evento  al store redux\r\n// useSelector para leer datos del store, useDispatch para enviar actions.\r\n\r\nfunction Navigator() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n        \r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\"> Coins </Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                    <Button variant=\"outline-info\" style={{marginRight: 2}} onClick={() => history.push(\"/\")}>\r\n                        Home\r\n                    </Button>            \r\n                </Nav>\r\n                <Form className=\"d-flex\">\r\n                    <Form.Select size=\"sm\" id=\"filterControl\">\r\n                       <option>ETH-USD</option>\r\n                       <option>BTC-USD</option>\r\n                    </Form.Select>\r\n                    <Button variant=\"outline-success\" type='button' value='Search'\r\n                        onClick={() => {\r\n                            let xhr = new XMLHttpRequest();\r\n                            let filter = document.getElementById(\"filterControl\").value\r\n                            if(filter.replace(/\\s+/g, '') === \"\"){\r\n                                alert('This field cannot be empty');\r\n                            }else if(!(filter.match(/([A-Z]){0,3}-([A-Z]){0,5}/))){\r\n                                alert('input incorrect , example of input correct : ETH-USDT');\r\n                            }else{\r\n                                let xhr = new XMLHttpRequest();\r\n                                let url = 'http://localhost:8000/bestprice/price'\r\n                                xhr.open('POST', url);\r\n                                xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n                                let body = { \"nameCoin\": filter};\r\n                                xhr.send(JSON.stringify(body));\r\n                                xhr.onload = function () {\r\n                                    let responseObj = JSON.parse(xhr.response);\r\n                                    if (responseObj.error1 != null) {\r\n                                      alert(responseObj.error1);\r\n                                    } else if (responseObj.error2 != null) {\r\n                                      alert(responseObj.error2);\r\n                                    } else {\r\n                                      let array1 = responseObj.lista.toString().split(',');  \r\n                                      alert(\"LO Q ME LLEGA DEL SOCKET\" + array1);\r\n                                      var newArray = new Array();\r\n                                      var count=0;\r\n                                      var price=0;\r\n                                      var countp=0;\r\n                                      var amount=0;\r\n                                      var id=0;\r\n                                      for(var element of array1){\r\n                                        if(count === 0){\r\n                                          id=element;\r\n                                        } else if (count===1) {\r\n                                          price=element;\r\n                                        } else if (count ===2){\r\n                                          countp=element;\r\n                                        } else{\r\n                                          amount=element;\r\n                                          count=-1;\r\n                                          newArray.push({\r\n                                            id:id, \r\n                                            price : price,\r\n                                            count : countp,\r\n                                            amount : amount})\r\n                                        }\r\n                                        count++;  \r\n                                      }    \r\n                                      dispatch(savePrice(newArray))\r\n                                    }\r\n                                };\r\n                                    \r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faSearch}> </FontAwesomeIcon>\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction Coins(props) {\r\n    return (\r\n        <Col className='mb-3' md={4} >\r\n            <Card bg={'card l-bg-green-dark'}>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                       {props.price} us$\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        count = {props.count}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Amount = {props.amount}\r\n                    </Card.Text>\r\n                    <Row>\r\n                        <Col md={{ offset: 5 }}>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction BestPrice() {\r\n    const listCoins = useSelector((state) => state.price.value)\r\n    return (\r\n        <div className=\"Partida\">\r\n            <div className=\"App-navbar\">\r\n                <Navigator> </Navigator>\r\n            </div>\r\n            <Container className='pt-4'>\r\n                <Row>\r\n                   {listCoins.map(Coins)}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BestPrice;","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Trade\\Trade.js",["76","77","78","79","80","81","82","83","84"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Trade.css';\r\nimport React, { useState , useEffect} from 'react';\r\nimport { search , reset_trade } from '../../redux/reducers/tradeSlice';\r\n\r\n\r\n\r\nfunction Coin(props) {\r\n    return (\r\n        <Card style={{ width: '13rem' }} text={\"white bg-success mb-3\"}>\r\n            <h5 class=\"card-header\">\r\n                {props.nickname}\r\n            </h5>\r\n            <h6 class=\"card-title mb-2\">\r\n                {props.others}\r\n            </h6>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction OrdenLobby(props) {\r\n    return (\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col xs={6} md={5}>\r\n                    {props.col1}\r\n                </Col>\r\n                <Col xs={6} md={5}>\r\n                    {props.col2}\r\n                </Col>\r\n                <Col xs={6} md={2}>\r\n                    {props.col3}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction Trade() {\r\n const [validate, setValidated] = useState(false);\r\n     \r\n const handleSubmit = (event) => {\r\n  const form = event.currentTarget;\r\n  if (form.checkValidity() === false) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  } else {\r\n    let name_coin = document.getElementById('disabledTextInput').value.toString();\r\n    let amount    = document.getElementById('disabledTextInputAmount').value.toString();\r\n    let price     = document.getElementById('disabledTextInputTwo').value.toString();\r\n    let divisa    = document.getElementById('disabledSelectOne').value.toString();\r\n    let type      = document.getElementById('disabledSelectTwo').value.toString();\r\n    var id_coin = 1;\r\n    var ws = \"\";\r\n    \r\n    alert(divisa);\r\n    alert(type);\r\n    alert(\"antes del fetch\");\r\n    let xhr = new XMLHttpRequest();\r\n    let url = 'http://localhost:8000/trade/coin'\r\n    xhr.open('POST', url);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    let body = { \"nameCoin\": name_coin  , \r\n                  \"amount\" : amount,\r\n                  \"price\"   : price , \r\n                  \"divisa\"  : divisa , \r\n                  \"type\"    : type};\r\n    alert(JSON.stringify(body));\r\n    xhr.send(JSON.stringify(body));\r\n    alert(\"DESPUS DEL SEND\");\r\n    xhr.onload = function () {\r\n      let responseObj = JSON.parse(xhr.response);\r\n      alert(responseObj.price)\r\n    };\r\n   }\r\n   setValidated(true);\r\n   };\r\n\r\n    const history = useHistory();\r\n    //const trade = useSelector((state) => state.trade.coin);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"container\" >\r\n            <Container className='pt-4'>\r\n                <h1 className=\"WeTitle\" >\r\n                    Buy && Sell\r\n                </h1>\r\n                <Row>\r\n                 <Col>  \r\n                 <Form noValidate validated={validate} onSubmit ={handleSubmit} >\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"disabledTextInput\">NameCoin</Form.Label>\r\n                        <Form.Control\r\n                          id=\"disabledTextInput\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Name Coin\"\r\n                          pattern=\"([A-Z]){0,3}-([A-Z]){0,5}\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Coin must be type of ETH-USDT </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"disabledTextInputAmount\">Amount</Form.Label>\r\n                        <Form.Control\r\n                          id=\"disabledTextInputAmount\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Put amount\"\r\n                          pattern=\"([0-9])+.\\w+\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Amount cannot be text</Form.Control.Feedback>\r\n                     \r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"disabledTextInputTwo\">Price</Form.Label>\r\n                        <Form.Control\r\n                          id=\"disabledTextInputTwo\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Put price\"\r\n                          pattern=\"([0-9])*\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Price must be numeric </Form.Control.Feedback>\r\n                     \r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"disabledSelect\">Money</Form.Label>\r\n                        <Form.Select id=\"disabledSelectOne\">\r\n                          <option>USD</option>\r\n                          <option>Peso Argentino</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"disabledSelect\">Select Buy or Sell</Form.Label>\r\n                        <Form.Select id=\"disabledSelectTwo\">\r\n                          <option>Buy</option>\r\n                          <option>Sell</option>\r\n                        </Form.Select>\r\n                      </Form.Group>\r\n                      <Button variant=\"primary\" type=\"submit\"  onClick={() => \r\n                        /*\r\n                        {\r\n                      let name_coin = document.getElementById('disabledTextInput').value.toString();\r\n                      let price     = document.getElementById('disabledTextInputTwo').value.toString();\r\n                      let divisa    = document.getElementById('disabledSelectOne').value.toString();\r\n                      let type      = document.getElementById('disabledSelectTwo').value.toString();\r\n                      var id_coin = 1;\r\n                      var ws = \"\";\r\n                      \r\n                      alert(divisa);\r\n                      alert(type);\r\n                      alert(\"antes del fetch\");\r\n                      let xhr = new XMLHttpRequest();\r\n                      let url = 'http://localhost:8000/trade/coin'\r\n                      xhr.open('POST', url);\r\n                      xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n                      let body = { \"nameCoin\": name_coin  , \r\n                                   \"price\"   : price , \r\n                                   \"divisa\"  : divisa , \r\n                                   \"type\"    : type};\r\n                      alert(JSON.stringify(body));\r\n                      xhr.send(JSON.stringify(body));\r\n                      alert(\"DESPUS DEL SEND\");\r\n                      xhr.onload = function () {\r\n                        let responseObj = JSON.parse(xhr.response);\r\n                        alert(responseObj.price)\r\n                      };\r\n                      } \r\n                      */\r\n                     {}\r\n                      }\r\n                      \r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button type=\"submit\" onClick={() => history.push(\"/\")}>\r\n                        Home\r\n                      </Button>    \r\n                 </Form>\r\n                 </Col>\r\n                 <Col>\r\n                 </Col>\r\n                 </Row> \r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trade;\r\n","C:\\Users\\xavier\\challengeVick\\Front\\src\\components\\Init\\Init.js",["85"],"import './Init.css';\r\nimport React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Init() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"bg\">\r\n      <Container>\r\n        <Row>\r\n          <text className=\"TextYellow\">\r\n            Cripto\r\n            </text>\r\n        </Row>\r\n        <Row>\r\n          <Button className=\"ButtomExampleTwo\" variant=\"secondary\"\r\n            style={{ marginTop: \"25%\", width: \"20%\", marginLeft: \"19%\" }}\r\n            onClick={() => history.push(\"/bestPrice\")}>\r\n            BestPrice\r\n            </Button>\r\n          <Button className=\"ButtomExampleTwo\" variant=\"secondary\"\r\n            style={{ marginTop: \"25%\", width: \"20%\", marginLeft: \"19%\" }}\r\n            onClick={() => history.push(\"/trade\")}>\r\n            Trade\r\n            </Button>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Init;\r\n","C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\store.js",[],"C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\reducers\\tradeSlice.js",[],"C:\\Users\\xavier\\challengeVick\\Front\\src\\redux\\reducers\\bestpriceSlice.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\index.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\store.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Root\\Root.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\reducers\\tradeSlice.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\redux\\reducers\\bestpriceSlice.js",[],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\BestPrice\\BestPrice.js",["86","87","88"],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Trade\\Trade.js",["89","90","91","92","93","94","95","96","97"],"C:\\Users\\xavier\\BitfinexApi\\Front\\src\\components\\Init\\Init.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":14,"column":22,"nodeType":"105","messageId":"106","endLine":14,"endColumn":33},{"ruleId":"103","severity":1,"message":"107","line":42,"column":33,"nodeType":"105","messageId":"106","endLine":42,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":64,"column":54,"nodeType":"110","messageId":"111","endLine":64,"endColumn":65},{"ruleId":"103","severity":1,"message":"112","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"103","severity":1,"message":"113","line":11,"column":28,"nodeType":"105","messageId":"106","endLine":11,"endColumn":37},{"ruleId":"103","severity":1,"message":"114","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"115","line":12,"column":19,"nodeType":"105","messageId":"106","endLine":12,"endColumn":30},{"ruleId":"103","severity":1,"message":"116","line":16,"column":10,"nodeType":"105","messageId":"106","endLine":16,"endColumn":14},{"ruleId":"103","severity":1,"message":"117","line":29,"column":10,"nodeType":"105","messageId":"106","endLine":29,"endColumn":20},{"ruleId":"103","severity":1,"message":"118","line":61,"column":9,"nodeType":"105","messageId":"106","endLine":61,"endColumn":16},{"ruleId":"103","severity":1,"message":"119","line":62,"column":9,"nodeType":"105","messageId":"106","endLine":62,"endColumn":11},{"ruleId":"103","severity":1,"message":"120","line":89,"column":11,"nodeType":"105","messageId":"106","endLine":89,"endColumn":19},{"ruleId":"103","severity":1,"message":"120","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":14,"column":22,"nodeType":"105","messageId":"106","endLine":14,"endColumn":33},{"ruleId":"103","severity":1,"message":"107","line":42,"column":33,"nodeType":"105","messageId":"106","endLine":42,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":64,"column":54,"nodeType":"110","messageId":"111","endLine":64,"endColumn":65},{"ruleId":"103","severity":1,"message":"112","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"103","severity":1,"message":"113","line":11,"column":28,"nodeType":"105","messageId":"106","endLine":11,"endColumn":37},{"ruleId":"103","severity":1,"message":"114","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"115","line":12,"column":19,"nodeType":"105","messageId":"106","endLine":12,"endColumn":30},{"ruleId":"103","severity":1,"message":"116","line":16,"column":10,"nodeType":"105","messageId":"106","endLine":16,"endColumn":14},{"ruleId":"103","severity":1,"message":"117","line":29,"column":10,"nodeType":"105","messageId":"106","endLine":29,"endColumn":20},{"ruleId":"103","severity":1,"message":"118","line":61,"column":9,"nodeType":"105","messageId":"106","endLine":61,"endColumn":16},{"ruleId":"103","severity":1,"message":"119","line":62,"column":9,"nodeType":"105","messageId":"106","endLine":62,"endColumn":11},{"ruleId":"103","severity":1,"message":"120","line":89,"column":11,"nodeType":"105","messageId":"106","endLine":89,"endColumn":19},{"ruleId":"103","severity":1,"message":"120","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":17},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'reset_price' is defined but never used.","Identifier","unusedVar","'xhr' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'search' is defined but never used.","'reset_trade' is defined but never used.","'Coin' is defined but never used.","'OrdenLobby' is defined but never used.","'id_coin' is assigned a value but never used.","'ws' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]