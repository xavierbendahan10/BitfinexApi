{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xavier\\\\challengeVick\\\\Front\\\\src\\\\components\\\\Trade\\\\Trade.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Trade.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Coin(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '13rem'\n    },\n    text: \"white bg-success mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      class: \"card-header\",\n      children: props.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      class: \"card-title mb-2\",\n      children: props.others\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Coin;\n\nfunction OrdenLobby(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pt-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 5,\n        children: props.col1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 5,\n        children: props.col2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 2,\n        children: props.col3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = OrdenLobby;\n\nfunction Trade(props) {\n  _s();\n\n  const history = useHistory(); //const partida = useSelector((state) => state.turno.game);\n  //const usuarios = useSelector((state) => state.usuarios.users);\n  //const mi_user = useSelector((state) => state.turno.user)\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"WeTitle\",\n        children: \"Buy && Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(OrdenLobby, {\n          col1: /*#__PURE__*/_jsxDEV(Coin, {\n            nickname: \"Prueba1\",\n            others: \"P2estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this),\n          col2: \"\",\n          col3: /*#__PURE__*/_jsxDEV(Coin, {\n            nickname: \"Prueba2\",\n            others: \"P3estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OrdenLobby, {\n          col1: \"\",\n          col2: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-54\",\n            onClick: () => {\n              var flag = 0; //let game_id = partida.game_id;\n\n              let url = 'http://127.0.0.1:8000/api/game/init/';\n              fetch(url, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  name: \"coin.name\",\n                  idOwner: \"coin.id\"\n                })\n              }).then(response => {\n                response.json();\n                if (response.status === 200) flag = 1;\n              }).then(data => {\n                if (!flag) {\n                  alert(\"No eres el host y/o la partida no contiene suficiente jugadores\");\n                } else {\n                  history.push(\"/turno\");\n                }\n              });\n            },\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this),\n          col3: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trade, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c3 = Trade;\nexport default Trade;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Coin\");\n$RefreshReg$(_c2, \"OrdenLobby\");\n$RefreshReg$(_c3, \"Trade\");","map":{"version":3,"sources":["C:/Users/xavier/challengeVick/Front/src/components/Trade/Trade.js"],"names":["Container","Card","Row","Col","Button","useHistory","useSelector","useDispatch","Coin","props","width","nickname","others","OrdenLobby","col1","col2","col3","Trade","history","dispatch","marginRight","flag","url","fetch","method","headers","body","JSON","stringify","name","idOwner","then","response","json","status","data","alert","push"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Trade.css';\r\n\r\nfunction Coin(props) {\r\n    return (\r\n        <Card style={{ width: '13rem' }} text={\"white bg-success mb-3\"}>\r\n            <h5 class=\"card-header\">\r\n                {props.nickname}\r\n            </h5>\r\n            <h6 class=\"card-title mb-2\">\r\n                {props.others}\r\n            </h6>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction OrdenLobby(props) {\r\n    return (\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col xs={6} md={5}>\r\n                    {props.col1}\r\n                </Col>\r\n                <Col xs={6} md={5}>\r\n                    {props.col2}\r\n                </Col>\r\n                <Col xs={6} md={2}>\r\n                    {props.col3}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction Trade(props) {\r\n    const history = useHistory();\r\n    //const partida = useSelector((state) => state.turno.game);\r\n    //const usuarios = useSelector((state) => state.usuarios.users);\r\n    //const mi_user = useSelector((state) => state.turno.user)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div class=\"container\" >\r\n            <Container className='pt-4'>\r\n                <h1 className=\"WeTitle\" >\r\n                    Buy && Sell\r\n                </h1>\r\n                <div style={{ marginRight: \"10%\" }} >\r\n                    <OrdenLobby\r\n                        col1={<Coin nickname={\"Prueba1\"} others=\"P2estado\"></Coin>}\r\n                        col2=\"\"\r\n                        col3={<Coin nickname={\"Prueba2\"} others=\"P3estado\"></Coin>}>\r\n                    </OrdenLobby>\r\n                    <OrdenLobby\r\n                        col1=\"\"\r\n                        col2={\r\n                            <button className=\"button-54\" onClick={() => {\r\n                                var flag = 0;\r\n                                //let game_id = partida.game_id;\r\n                                let url = 'http://127.0.0.1:8000/api/game/init/';\r\n                                fetch(url, {\r\n                                    method: 'PUT',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({ name: \"coin.name\", idOwner: \"coin.id\" })\r\n                                }).then(response => {\r\n                                    response.json();\r\n                                    if (response.status === 200)\r\n                                        flag = 1;\r\n                                }).then(data => {\r\n                                    if (!flag) {\r\n                                        alert(\"No eres el host y/o la partida no contiene suficiente jugadores\");\r\n                                    }\r\n                                    else {\r\n                                        history.push(\"/turno\");\r\n                                    }\r\n\r\n                                })\r\n                            }}>\r\n                                Ok\r\n                            </button>\r\n                        }\r\n                        col3=\"\">\r\n                    </OrdenLobby>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trade;\r\n"]},"metadata":{},"sourceType":"module"}