{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xavier\\\\challengeVick\\\\Front\\\\src\\\\components\\\\BestPrice\\\\BestPrice.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { savePrice, reset_price } from '../../redux/reducers/bestpriceSlice';\nimport { useHistory } from \"react-router-dom\"; // savePrice para poder usar el \"dispatch\" y enviar el evento  al store redux\n// useSelector para leer datos del store, useDispatch para enviar actions.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navigator() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: \" Coins \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"me-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          style: {\n            marginRight: 2\n          },\n          onClick: () => history.push(\"/\"),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          type: \"button\",\n          onClick: () => {\n            /*\r\n            let xhr = new XMLHttpRequest();\r\n            let url = 'http://127.0.0.1:8000/api/coins/list'\r\n            xhr.open('GET', url);\r\n            xhr.send();\r\n            xhr.onload = function () {\r\n                    let responseObj = JSON.parse(xhr.response);\r\n                    dispatch(savePrice(responseObj))\r\n                };\r\n            }\r\n            */\n            console.log(\"CHGsa\");\n          },\n          children: \"All Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search Coin\",\n          className: \"mr-2\",\n          \"aria-label\": \"Search\",\n          id: \"filterControl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          type: \"button\",\n          value: \"Search\",\n          onClick: () => {\n            let xhr = new XMLHttpRequest();\n            let filter = document.getElementById(\"filterControl\").value;\n\n            if (filter.replace(/\\s+/g, '') === \"\") {\n              alert('This field cannot be empty');\n            } else if (!filter.match(/([A-Z]){0,3}-([A-Z]){0,5}/)) {\n              alert('input incorrect , example of input correct : ETH-USDT');\n            } else {\n              let xhr = new XMLHttpRequest();\n              let url = 'http://localhost:8000/bestprice/price';\n              xhr.open('POST', url);\n              xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n              let body = {\n                \"nameCoin\": filter\n              };\n              xhr.send(JSON.stringify(body));\n\n              xhr.onload = function () {\n                let responseObj = JSON.parse(xhr.response);\n\n                if (responseObj.error1 != null) {\n                  alert(responseObj.error1);\n                } else if (responseObj.error2 != null) {\n                  alert(responseObj.error2);\n                } else {\n                  let array1 = responseObj.lista.toString().split(',');\n                  dispatch(savePrice(array1));\n                }\n              };\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navigator, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Navigator;\n\nfunction Coins(props) {\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"mb-3\",\n    md: 4,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '13rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" ID (#\", props[0], \") \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Price \", props[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"count \", props[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Amount \", props[3]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              offset: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Coins;\n\nfunction BestPrice() {\n  _s2();\n\n  const listCoins = useSelector(state => state.price.value);\n  alert(\"Q SON LIST COINS\" + listCoins);\n  let array1 = listCoins.split(',');\n  alert(\"Ahora convertido veamos...\" + listCoins);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Partida\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navigator, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pt-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: listCoins.map(Coins)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(BestPrice, \"I9TvsrK8M2JGn8JGbIL/brNOzP4=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = BestPrice;\nexport default BestPrice;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Navigator\");\n$RefreshReg$(_c2, \"Coins\");\n$RefreshReg$(_c3, \"BestPrice\");","map":{"version":3,"sources":["C:/Users/xavier/challengeVick/Front/src/components/BestPrice/BestPrice.js"],"names":["React","Container","Row","Button","Navbar","Nav","Form","Col","Card","FontAwesomeIcon","faSearch","useSelector","useDispatch","savePrice","reset_price","useHistory","Navigator","dispatch","history","marginRight","push","console","log","xhr","XMLHttpRequest","filter","document","getElementById","value","replace","alert","match","url","open","setRequestHeader","body","send","JSON","stringify","onload","responseObj","parse","response","error1","error2","array1","lista","toString","split","Coins","props","width","offset","BestPrice","listCoins","state","price","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePrice , reset_price } from '../../redux/reducers/bestpriceSlice';\r\nimport { useHistory } from \"react-router-dom\";\r\n// savePrice para poder usar el \"dispatch\" y enviar el evento  al store redux\r\n// useSelector para leer datos del store, useDispatch para enviar actions.\r\n\r\nfunction Navigator() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n        \r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand href=\"#home\"> Coins </Navbar.Brand>\r\n                <Nav className=\"me-auto\">\r\n                    <Button variant=\"outline-info\" style={{marginRight: 2}} onClick={() => history.push(\"/\")}>\r\n                        Home\r\n                    </Button>            \r\n                    <Button variant=\"outline-info\" type='button' onClick={() => {\r\n                        /*\r\n                        let xhr = new XMLHttpRequest();\r\n                        let url = 'http://127.0.0.1:8000/api/coins/list'\r\n                        xhr.open('GET', url);\r\n                        xhr.send();\r\n                        xhr.onload = function () {\r\n                                let responseObj = JSON.parse(xhr.response);\r\n                                dispatch(savePrice(responseObj))\r\n                            };\r\n                        }\r\n                        */\r\n                         console.log(\"CHGsa\")\r\n                        }}>\r\n                        All Coins\r\n                    </Button>\r\n                </Nav>\r\n                <Form className=\"d-flex\">\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Search Coin\"\r\n                        className=\"mr-2\"\r\n                        aria-label=\"Search\"\r\n                        id=\"filterControl\"\r\n                    />\r\n                    <Button variant=\"outline-success\" type='button' value='Search'\r\n                        onClick={() => {\r\n                            let xhr = new XMLHttpRequest();\r\n                            let filter = document.getElementById(\"filterControl\").value\r\n                            if(filter.replace(/\\s+/g, '') === \"\"){\r\n                                alert('This field cannot be empty');\r\n                            }else if(!(filter.match(/([A-Z]){0,3}-([A-Z]){0,5}/))){\r\n                                alert('input incorrect , example of input correct : ETH-USDT');\r\n                            }else{\r\n                                let xhr = new XMLHttpRequest();\r\n                                let url = 'http://localhost:8000/bestprice/price'\r\n                                xhr.open('POST', url);\r\n                                xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n                                let body = { \"nameCoin\": filter};\r\n                                xhr.send(JSON.stringify(body));\r\n                                xhr.onload = function () {\r\n                                    let responseObj = JSON.parse(xhr.response);\r\n                                    if (responseObj.error1 != null) {\r\n                                      alert(responseObj.error1);\r\n                                    } else if (responseObj.error2 != null) {\r\n                                      alert(responseObj.error2);\r\n                                    } else {\r\n                                      let array1 = responseObj.lista.toString().split(',');  \r\n                                      dispatch(savePrice(array1))\r\n                                    }\r\n                                };\r\n                                    \r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faSearch}> </FontAwesomeIcon>\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\nfunction Coins(props) {\r\n    return (\r\n        <Col className='mb-3' md={4} >\r\n            <Card style={{ width: '13rem' }}>\r\n                <Card.Body>\r\n                    <Card.Title> ID (#{props[0]}) </Card.Title>\r\n                    <Card.Text>\r\n                        Price {props[1]}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        count {props[2]}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Amount {props[3]}\r\n                    </Card.Text>\r\n                    <Row>\r\n                        <Col md={{ offset: 5 }}>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n\r\nfunction BestPrice() {\r\n    const listCoins = useSelector((state) => state.price.value)\r\n    alert(\"Q SON LIST COINS\"+ listCoins)\r\n    let array1 = listCoins.split(',');  \r\n    alert(\"Ahora convertido veamos...\"+ listCoins)\r\n    return (\r\n        <div className=\"Partida\">\r\n            <div className=\"App-navbar\">\r\n                <Navigator> </Navigator>\r\n            </div>\r\n            <Container className='pt-4'>\r\n                <Row>\r\n                   {listCoins.map(Coins)}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BestPrice;"]},"metadata":{},"sourceType":"module"}