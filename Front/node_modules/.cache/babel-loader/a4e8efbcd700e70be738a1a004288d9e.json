{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xavier\\\\challengeVick\\\\Front\\\\src\\\\components\\\\Trade\\\\Trade.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Trade.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Coin(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '13rem'\n    },\n    text: \"white bg-success mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      class: \"card-header\",\n      children: props.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      class: \"card-title mb-2\",\n      children: props.others\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Coin;\n\nfunction OrdenLobby(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"pt-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 5,\n        children: props.col1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 5,\n        children: props.col2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 2,\n        children: props.col3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = OrdenLobby;\n\nfunction Trade(props) {\n  _s();\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      let nombre_usuario = document.getElementById('nickname').value;\n      let nombre_partida = document.getElementById('nombrePartida').value;\n      var id_usuario = -1;\n      var id_partida = -1;\n      var ws = \"\";\n      fetch('http://127.0.0.1:8000/api/player/create/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nickname: nombre_usuario\n        })\n      }).then(response => response.json()).then(data => {\n        id_usuario = data.player.id;\n        fetch('http://127.0.0.1:8000/api/game/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: nombre_partida,\n            idOwner: id_usuario\n          })\n        }).then(response => response.json()).then(data => {\n          id_partida = data.idPartida;\n          dispatch(setUser({\n            user_id: id_usuario,\n            nickname: nombre_usuario\n          }));\n          dispatch(setGame({\n            game_id: id_partida,\n            game_name: nombre_partida\n          }));\n          dispatch(joinUser({\n            user_id: id_usuario,\n            nickname: nombre_usuario\n          }));\n          let pathGame = \"ws://localhost:8000/ws/turno/\".concat(String(id_partida)).concat(\"/\", id_usuario);\n          ws = new WebSocket(pathGame);\n\n          ws.onmessage = function (event) {\n            var mess = JSON.parse(event.data);\n\n            switch (mess.type) {\n              case \"join\":\n                dispatch(joinUser({\n                  user_id: mess.user.user_id,\n                  nickname: mess.user.nickname\n                }));\n                break;\n\n              case \"quit\":\n                dispatch(quitUser(mess.user));\n                break;\n\n              case \"close\":\n                ws.close();\n                break;\n\n              case \"dice\":\n                dispatch(setDice(mess.user));\n                break;\n\n              case \"cards\":\n                dispatch(setCards(mess.deck));\n                break;\n\n              case \"players_turn\":\n                console.log(mess);\n                dispatch(setTurn(mess.players));\n                break;\n\n              case \"pass_turn\":\n                const firstElement = mess.list[0];\n                console.log(mess.list);\n                console.log(mess);\n                var array = mess.list;\n                var array2 = [...array];\n                array2.shift();\n                array2.push(firstElement);\n                console.log(array2 + \" Array con first\");\n                dispatch(setTurn(array2));\n                break;\n\n              default:\n            }\n          };\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      history.push(\"/lobby\");\n    }\n\n    setValidated(true);\n  };\n\n  const history = useHistory(); //const partida = useSelector((state) => state.turno.game);\n  //const usuarios = useSelector((state) => state.usuarios.users);\n  //const mi_user = useSelector((state) => state.turno.user)\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"WeTitle\",\n        children: \"Buy && Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: \"10%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validate,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"nickname\",\n              required: true,\n              type: \"text\",\n              placeholder: \"Ingrese su nickname\",\n              pattern: \"([a-zA-Z0-9]){4,20}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Debe contener entre 4 y 20 caracteres, solo letras y n\\xFAmeros sin espacios.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom02\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Nombre de partida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"nombrePartida\",\n              required: true,\n              type: \"text\",\n              placeholder: \"Ingrese el nombre de la partida\",\n              pattern: \"([a-zA-Z0-9]){4,20}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Debe contener entre 4 y 20 caracteres, solo letras y n\\xFAmeros sin espacios.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: handleSubmit,\n            children: \"Crear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 23\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => history.push(\"/partida\"),\n            children: \"Cerrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(OrdenLobby, {\n          col1: \"\",\n          col2: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-54\",\n            onClick: () => {\n              var flag = 0; //let game_id = partida.game_id;\n\n              let url = 'http://127.0.0.1:8000/api/game/init/';\n              fetch(url, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  name: \"coin.name\",\n                  idOwner: \"coin.id\"\n                })\n              }).then(response => {\n                response.json();\n                if (response.status === 200) flag = 1;\n              }).then(data => {\n                if (!flag) {\n                  alert(\"No eres el host y/o la partida no contiene suficiente jugadores\");\n                } else {\n                  history.push(\"/turno\");\n                }\n              });\n            },\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this),\n          col3: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trade, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c3 = Trade;\nexport default Trade;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Coin\");\n$RefreshReg$(_c2, \"OrdenLobby\");\n$RefreshReg$(_c3, \"Trade\");","map":{"version":3,"sources":["C:/Users/xavier/challengeVick/Front/src/components/Trade/Trade.js"],"names":["Container","Card","Row","Col","Button","Form","useHistory","useSelector","useDispatch","Coin","props","width","nickname","others","OrdenLobby","col1","col2","col3","Trade","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","nombre_usuario","document","getElementById","value","nombre_partida","id_usuario","id_partida","ws","fetch","method","headers","body","JSON","stringify","then","response","json","data","player","id","name","idOwner","idPartida","dispatch","setUser","user_id","setGame","game_id","game_name","joinUser","pathGame","concat","String","WebSocket","onmessage","mess","parse","type","user","quitUser","close","setDice","setCards","deck","console","log","setTurn","players","firstElement","list","array","array2","shift","push","catch","error","history","setValidated","marginRight","validate","flag","url","status","alert"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './Trade.css';\r\n\r\nfunction Coin(props) {\r\n    return (\r\n        <Card style={{ width: '13rem' }} text={\"white bg-success mb-3\"}>\r\n            <h5 class=\"card-header\">\r\n                {props.nickname}\r\n            </h5>\r\n            <h6 class=\"card-title mb-2\">\r\n                {props.others}\r\n            </h6>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction OrdenLobby(props) {\r\n    return (\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col xs={6} md={5}>\r\n                    {props.col1}\r\n                </Col>\r\n                <Col xs={6} md={5}>\r\n                    {props.col2}\r\n                </Col>\r\n                <Col xs={6} md={2}>\r\n                    {props.col3}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nfunction Trade(props) {\r\n    \r\n const handleSubmit = (event) => {\r\n  const form = event.currentTarget;\r\n  if (form.checkValidity() === false) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  } else {\r\n    let nombre_usuario = document.getElementById('nickname').value\r\n    let nombre_partida = document.getElementById('nombrePartida').value\r\n    var id_usuario = -1;\r\n    var id_partida = -1;\r\n    var ws = \"\";\r\n\r\n    fetch('http://127.0.0.1:8000/api/player/create/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ nickname: nombre_usuario }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        id_usuario = data.player.id;\r\n        fetch('http://127.0.0.1:8000/api/game/create', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ name: nombre_partida, idOwner: id_usuario })\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            id_partida = data.idPartida;\r\n            dispatch(setUser({ user_id: id_usuario, nickname: nombre_usuario }));\r\n            dispatch(setGame({ game_id: id_partida, game_name: nombre_partida }));\r\n            dispatch(joinUser({ user_id: id_usuario, nickname: nombre_usuario }));\r\n            let pathGame = \"ws://localhost:8000/ws/turno/\".concat(String(id_partida)).concat(\"/\", id_usuario);\r\n            ws = new WebSocket(pathGame);\r\n            ws.onmessage = function (event) {\r\n              var mess = JSON.parse(event.data)\r\n              switch (mess.type) {\r\n                case \"join\":\r\n                  dispatch(joinUser({ user_id: mess.user.user_id, nickname: mess.user.nickname }));\r\n                  break;\r\n                case \"quit\":\r\n                  dispatch(quitUser(mess.user))\r\n                  break;\r\n                case \"close\":\r\n                  ws.close();\r\n                  break;\r\n                case \"dice\":\r\n                  dispatch(setDice(mess.user))\r\n                  break;\r\n                case \"cards\":\r\n                  dispatch(setCards(mess.deck))\r\n                  break;\r\n                case \"players_turn\":\r\n                  console.log(mess)\r\n                  dispatch(setTurn(mess.players))\r\n                  break;\r\n                case \"pass_turn\":\r\n                  const firstElement = mess.list[0]\r\n                  console.log(mess.list)\r\n                  console.log(mess)\r\n                  var array = mess.list\r\n                  var array2 = [...array]\r\n                  array2.shift()\r\n                  array2.push(firstElement)\r\n                  console.log(array2 + \" Array con first\")\r\n                  dispatch(setTurn(array2))\r\n                  break;\r\n                default:\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error:', error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n    history.push(\"/lobby\");\r\n   }\r\n   setValidated(true);\r\n   };\r\n\r\n    const history = useHistory();\r\n    //const partida = useSelector((state) => state.turno.game);\r\n    //const usuarios = useSelector((state) => state.usuarios.users);\r\n    //const mi_user = useSelector((state) => state.turno.user)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div class=\"container\" >\r\n            <Container className='pt-4'>\r\n                <h1 className=\"WeTitle\" >\r\n                    Buy && Sell\r\n                </h1>\r\n                <div style={{ marginRight: \"10%\" }} >\r\n                   <Form noValidate validated={validate} onSubmit={handleSubmit}>\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Nickname</Form.Label>\r\n                        <Form.Control\r\n                          id=\"nickname\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Ingrese su nickname\"\r\n                          pattern=\"([a-zA-Z0-9]){4,20}\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Debe contener entre 4 y 20 caracteres, solo letras y números sin espacios.</Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\r\n                        <Form.Label>Nombre de partida</Form.Label>\r\n                        <Form.Control\r\n                          id=\"nombrePartida\"\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Ingrese el nombre de la partida\"\r\n                          pattern=\"([a-zA-Z0-9]){4,20}\"\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Debe contener entre 4 y 20 caracteres, solo letras y números sin espacios.</Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Button variant=\"primary\" type=\"submit\" disabled={handleSubmit}>\r\n                        Crear\r\n                      </Button>{' '}\r\n                      <Button variant=\"secondary\" onClick={() => history.push(\"/partida\")}>Cerrar</Button>\r\n                    </Form>\r\n                    <OrdenLobby\r\n                        col1=\"\"\r\n                        col2={\r\n                            <button className=\"button-54\" onClick={() => {\r\n                                var flag = 0;\r\n                                //let game_id = partida.game_id;\r\n                                let url = 'http://127.0.0.1:8000/api/game/init/';\r\n                                fetch(url, {\r\n                                    method: 'PUT',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({ name: \"coin.name\", idOwner: \"coin.id\" })\r\n                                }).then(response => {\r\n                                    response.json();\r\n                                    if (response.status === 200)\r\n                                        flag = 1;\r\n                                }).then(data => {\r\n                                    if (!flag) {\r\n                                        alert(\"No eres el host y/o la partida no contiene suficiente jugadores\");\r\n                                    }\r\n                                    else {\r\n                                        history.push(\"/turno\");\r\n                                    }\r\n\r\n                                })\r\n                            }}>\r\n                                Ok\r\n                            </button>\r\n                        }\r\n                        col3=\"\">\r\n                    </OrdenLobby>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trade;\r\n"]},"metadata":{},"sourceType":"module"}